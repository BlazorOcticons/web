@using BlazorOcticons.Octicons;
@using System.Reflection
@page "/Icon/{iconName}"

@if(_iconType != null)
{
  <div class="w-12 bg-color-white">
    <div class="w-12 max-w-lg mx-auto d-flex flex-direction-column py-5 px-3">
      <div id="usage" class="py-4">
        <span class="fw-800 fs-xxx-large md-fs-xx-large color-1">
          @IconName
        </span>
      </div>
      <div class="py-3">
        <span class="fs-x-large md-fs-large">
          Icon <b>@IconName</b> simple usage example:
        </span>
      </div>
      <div class="w-12 pt-3 pb-5 md-pt-2 md-pb-4">
        <div class="py-2 lg-py-0">
          <div class="d-flex flex-direction-row md-flex-direction-column-reverse text-decoration-none color-black dark br-3 sm-br-2 big-shadow">
            <div class="w-9 md-w-inherit align-items-center justify-content-center p-4 sm-p-3">
              <span class="fs-large fw-bold code grey md-fs-medium sm-fs-small">
                &nbsp;&lt;<span class="dotnet">@IconName</span> /&gt;
              </span><br/>
            </div>
            <div class="w-3 md-w-inherit d-flex align-items-center justify-content-center p-4 sm-p-3 br-3 sm-br-2 bg-color-white">
              <DynamicComponent
                Type="@Assembly.Load("BlazorOcticons").GetTypes().FirstOrDefault(t => t.FullName != null && t.FullName.Contains(IconName))"/>
            </div>
          </div>
        </div>
      </div>
      <div class="py-3">
        <span class="fs-x-large md-fs-large">
          Icon <b>@IconName</b> usage example (with parameters):
        </span>
      </div>
      <div class="w-12 pt-3 pb-5 md-pt-2 md-pb-4">
        <div class="py-2 lg-py-0">
          <div class="d-flex flex-direction-row md-flex-direction-column-reverse text-decoration-none color-black dark br-3 sm-br-2 big-shadow">
            <div class="w-9 md-w-inherit align-items-center justify-content-center p-4 sm-p-3">
              <span class="fs-large fw-bold code grey md-fs-medium sm-fs-small">
                &nbsp;&lt;<span class="dotnet">@IconName</span> <span class="attr">Color</span>="@_params["Color"]" <span class="attr">Size</span>="@_params["Size"]"/&gt;
              </span><br/>
            </div>
            <div class="w-3 md-w-inherit d-flex align-items-center justify-content-center p-4 sm-p-3 br-3 sm-br-2 bg-color-white">
              <DynamicComponent
                Type="@Assembly.Load("BlazorOcticons").GetTypes().FirstOrDefault(t => t.FullName != null && t.FullName.Contains(IconName))"
                Parameters="@_params"/>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
} else
{
  <div class="w-12 bg-color-white">
    <div class="w-12 max-w-lg mx-auto d-flex flex-direction-column py-5 px-3">
      <div id="usage" class="py-4">
        <span class="fw-800 fs-xxx-large md-fs-xx-large color-1">
          @IconName does not exist
        </span>
      </div>
      <div class="py-3">
        <span class="fs-x-large md-fs-large">
          Icon <b>@IconName</b> does not exist or something went wrong. 
        </span>
      </div>
    </div>
  </div>
    
}

@code {

  readonly Dictionary<string, object> _params = new() { { "Color", "#702AF7" }, {"Size", 48} };
  public Type _iconType;

  public Icon()
  {
    _iconType = Assembly.Load("BlazorOcticons").GetTypes().FirstOrDefault(t => t.FullName != null && t.FullName.Contains(IconName));
  }

  [Parameter]
  public string IconName { get; set; } = "";

}